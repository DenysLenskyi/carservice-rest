{
	"info": {
		"_postman_id": "9100f507-ca1d-492e-aefa-c492e60ee536",
		"name": "carservice API test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30655531"
	},
	"item": [
		{
			"name": "CarBrandTest",
			"item": [
				{
					"name": "create_brand",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test_brand_name\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/brand",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_brand_name_exists_Lexus",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lexus\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/brand",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_brand",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"20\",\n    \"name\": \"updated_name\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/brand",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_brand_name_exists",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"20\",\n    \"name\": \"Ram\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/brand",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_brand_id_does_not_exist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"-1\",\n    \"name\": \"Ram\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/brand",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_brand_id_does_not_exist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/1290",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"1290"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_brand",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_brand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_brand_paginated_sort_by_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/all?sort=name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"all"
							],
							"query": [
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_brand_paginated_p=12_s=5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/all?pageNumber=12&pageSize=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"all"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "12"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_brand_paginated_p=12_s=5_sort=name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/all?pageNumber=12&pageSize=5&sort=name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"all"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "12"
								},
								{
									"key": "pageSize",
									"value": "5"
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_brand_paginated_p=11_s=5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/all?pageNumber=11&pageSize=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"all"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "11"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_brand_by_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_brand_by_name_Lexus",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/by-name/Lexus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"by-name",
								"Lexus"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_brand_by_name_does_not_exist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/by-name/Lexusss",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"by-name",
								"Lexusss"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_brand_by_id_does_not_exist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/brand/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"brand",
								"-1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CarTypeTest",
			"item": [
				{
					"name": "create_type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test_type_name\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_type_name_exists_SUV",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SUV\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"1\",\n    \"name\": \"updated_name\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_type_name_exists",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"11\",\n    \"name\": \"Sedan\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_type_id_does_not_exist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"-1\",\n    \"name\": \"some name\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_type_id_does_not_exist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_type",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_type_paginated_sort_by_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/all?sort=name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"all"
							],
							"query": [
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_type_paginated_p=2_s=5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/all?pageNumber=2&pageSize=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"all"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "2"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_type_paginated_p=1_s=5_sort=name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/all?pageNumber=1&pageSize=5&sort=name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"all"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "5"
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_type_paginated_p=1_s=5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/all?pageNumber=1&pageSize=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"all"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_type_by_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_type_by_name_SUV",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/by-name/SUV",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"by-name",
								"SUV"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_type_by_name_does_not_exist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/by-name/SUVSUV",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"by-name",
								"SUVSUV"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_type_by_id_does_not_exist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/type/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"type",
								"-1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CarModelTest",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test\",\n    \"year\": \"2050\",\n    \"carBrandDto\": {\n        \"name\": \"BMW\"\n    },\n    \"carTypeDtos\": [\n        {\n            \"name\": \"Sedan\"\n        },\n        {\n            \"name\": \"SUV\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_invalid_dto",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test name\",\n    \"year\": \"2050\",\n    \"carBrandDto\": {\n        \"name\": \"invalid name\"\n    },\n    \"carTypeDtos\": [\n        {\n            \"name\": \"SUV\"\n        },\n        {\n            \"name\": \"Suvsuv\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_violate_constraint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Armada\",\n    \"year\": \"2005\",\n    \"carBrandDto\": {\n        \"name\": \"Nissan\"\n    },\n    \"carTypeDtos\": [\n        {\n            \"name\": \"SUV\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_violate_constraint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00YMth3mul\",\n    \"name\": \"Armada\",\n    \"year\": \"2005\",\n    \"carBrandDto\": {\n        \"name\": \"Nissan\"\n    },\n    \"carTypeDtos\": [\n        {\n            \"name\": \"SUV\"\n        },\n        {\n            \"name\": \"Sedan\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/model/00NyD3beGfgjkgjkfg",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model",
								"00NyD3beGfgjkgjkfg"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_partly",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00NyD3beGf\",\n    \"name\": \"Musmus\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_all_fields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00NyD3beGf\",\n    \"name\": \"Musmus\",\n    \"year\": \"2050\",\n    \"carBrandDto\": {\n        \"name\": \"Ford\"\n    },\n    \"carTypeDtos\": [\n        {\n            \"name\": \"Sedan\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_wrong_id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"wrongid\",\n    \"name\": \"Musmus\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/model",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/model/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"model",
								"search"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}